{"ast":null,"code":"var _jsxFileName = \"/Users/avryjackson/Desktop/algorithm-visualizer/src/pages/Stack.js\",\n  _s = $RefreshSig$();\n// src/pages/Stack.js\nimport React, { useState } from 'react';\nimport './Stack.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stack() {\n  _s();\n  const [stack, setStack] = useState([]); // Stack elements\n  const [actions, setActions] = useState([]); // Action history\n  const [inputValue, setInputValue] = useState(''); // Input value for push\n\n  // Function to handle push\n  const handlePush = () => {\n    if (inputValue.trim() !== '') {\n      setStack(prevStack => [...prevStack, inputValue]); // Add element to stack\n      setActions(prevActions => [...prevActions, `Pushed ${inputValue}`]); // Log action\n      setInputValue(''); // Clear input field\n    }\n  };\n\n  // Function to handle pop\n  const handlePop = () => {\n    if (stack.length > 0) {\n      const poppedValue = stack[stack.length - 1];\n      setStack(prevStack => prevStack.slice(0, -1)); // Remove top element\n      setActions(prevActions => [...prevActions, `Popped ${poppedValue}`]); // Log action\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stack Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stack-display\",\n      children: stack.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stack-item\",\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value),\n      placeholder: \"Enter value to push\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePush,\n      children: \"Push\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePop,\n      children: \"Pop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Action History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: actions.map((action, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: action\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Stack, \"eZvi9OdkW0M1fKFKkXpQw/9C8MQ=\");\n_c = Stack;\nvar _c;\n$RefreshReg$(_c, \"Stack\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Stack","_s","stack","setStack","actions","setActions","inputValue","setInputValue","handlePush","trim","prevStack","prevActions","handlePop","length","poppedValue","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index","type","onChange","e","target","placeholder","onClick","action","_c","$RefreshReg$"],"sources":["/Users/avryjackson/Desktop/algorithm-visualizer/src/pages/Stack.js"],"sourcesContent":["// src/pages/Stack.js\nimport React, { useState } from 'react';\nimport './Stack.css';\n\nexport default function Stack() {\n  const [stack, setStack] = useState([]); // Stack elements\n  const [actions, setActions] = useState([]); // Action history\n  const [inputValue, setInputValue] = useState(''); // Input value for push\n\n  // Function to handle push\n  const handlePush = () => {\n    if (inputValue.trim() !== '') {\n      setStack(prevStack => [...prevStack, inputValue]); // Add element to stack\n      setActions(prevActions => [...prevActions, `Pushed ${inputValue}`]); // Log action\n      setInputValue(''); // Clear input field\n    }\n  };\n\n  // Function to handle pop\n  const handlePop = () => {\n    if (stack.length > 0) {\n      const poppedValue = stack[stack.length - 1];\n      setStack(prevStack => prevStack.slice(0, -1)); // Remove top element\n      setActions(prevActions => [...prevActions, `Popped ${poppedValue}`]); // Log action\n    }\n  };\n\n  return (\n    <div className=\"stack-container\">\n      <h2>Stack Visualizer</h2>\n\n      {/* Stack display */}\n      <div className=\"stack-display\">\n        {stack.map((value, index) => (\n          <div key={index} className=\"stack-item\">\n            {value}\n          </div>\n        ))}\n      </div>\n\n      {/* Input for push and buttons for operations */}\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n        placeholder=\"Enter value to push\"\n      />\n      <button onClick={handlePush}>Push</button>\n      <button onClick={handlePop}>Pop</button>\n\n      {/* Action history */}\n      <div className=\"action-history\">\n        <h3>Action History</h3>\n        <ul>\n          {actions.map((action, index) => (\n            <li key={index}>{action}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}